%porównanie dla róznej liczby neuronów ukrytych
input = importdata("6krowneDANE.txt");
output = importdata("6krowneDANE.txt");
inputs = input';
targets = output';
confT = {};
for n = 1 : 14
hiddenLayerSize = n;
net = patternnet(hiddenLayerSize);
net.divideParam.trainRatio = 80/100;
net.divideParam.testRatio = 20/100;
%[net,tr] = trainlm(net,inputs,targets);
[net,tr] = trainrp(net,inputs,targets);
outputs = net(inputs);
confT{n} = confusion(targets,outputs);
end
dlmwrite('confusionTable.txt',confT);
confT = confT';



% pojedyncze sprawdzenie
input = importdata("32kFullDANE.txt");
output = importdata("32kFullTEST.txt");
inputs = input';
targets = output';

hiddenLayerSize = 10;
net = patternnet(hiddenLayerSize);
net.divideParam.trainRatio = 80/100;
net.divideParam.testRatio = 20/100;
[net,tr] = train(net,inputs,targets);
outputs = net(inputs);
errors = gsubtract(targets,outputs);
performance = perform(net,targets,outputs)
view(net)